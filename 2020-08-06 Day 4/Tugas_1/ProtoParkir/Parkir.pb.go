// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.12.4
// source: ProtoParkir/Parkir.proto

package ProtoParkir

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ServerReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ServerReply) Reset() {
	*x = ServerReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ProtoParkir_Parkir_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerReply) ProtoMessage() {}

func (x *ServerReply) ProtoReflect() protoreflect.Message {
	mi := &file_ProtoParkir_Parkir_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerReply.ProtoReflect.Descriptor instead.
func (*ServerReply) Descriptor() ([]byte, []int) {
	return file_ProtoParkir_Parkir_proto_rawDescGZIP(), []int{0}
}

func (x *ServerReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type Karcis struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdParkir   string `protobuf:"bytes,1,opt,name=id_parkir,json=idParkir,proto3" json:"id_parkir,omitempty"`
	WaktuMasuk string `protobuf:"bytes,2,opt,name=waktu_masuk,json=waktuMasuk,proto3" json:"waktu_masuk,omitempty"`
}

func (x *Karcis) Reset() {
	*x = Karcis{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ProtoParkir_Parkir_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Karcis) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Karcis) ProtoMessage() {}

func (x *Karcis) ProtoReflect() protoreflect.Message {
	mi := &file_ProtoParkir_Parkir_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Karcis.ProtoReflect.Descriptor instead.
func (*Karcis) Descriptor() ([]byte, []int) {
	return file_ProtoParkir_Parkir_proto_rawDescGZIP(), []int{1}
}

func (x *Karcis) GetIdParkir() string {
	if x != nil {
		return x.IdParkir
	}
	return ""
}

func (x *Karcis) GetWaktuMasuk() string {
	if x != nil {
		return x.WaktuMasuk
	}
	return ""
}

type Parkir struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdParkir      string `protobuf:"bytes,1,opt,name=id_parkir,json=idParkir,proto3" json:"id_parkir,omitempty"`
	TipeKendaraan string `protobuf:"bytes,2,opt,name=tipe_kendaraan,json=tipeKendaraan,proto3" json:"tipe_kendaraan,omitempty"`
	PlatNo        string `protobuf:"bytes,3,opt,name=plat_no,json=platNo,proto3" json:"plat_no,omitempty"`
}

func (x *Parkir) Reset() {
	*x = Parkir{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ProtoParkir_Parkir_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Parkir) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Parkir) ProtoMessage() {}

func (x *Parkir) ProtoReflect() protoreflect.Message {
	mi := &file_ProtoParkir_Parkir_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Parkir.ProtoReflect.Descriptor instead.
func (*Parkir) Descriptor() ([]byte, []int) {
	return file_ProtoParkir_Parkir_proto_rawDescGZIP(), []int{2}
}

func (x *Parkir) GetIdParkir() string {
	if x != nil {
		return x.IdParkir
	}
	return ""
}

func (x *Parkir) GetTipeKendaraan() string {
	if x != nil {
		return x.TipeKendaraan
	}
	return ""
}

func (x *Parkir) GetPlatNo() string {
	if x != nil {
		return x.PlatNo
	}
	return ""
}

type Struk struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdParkir      string `protobuf:"bytes,1,opt,name=id_parkir,json=idParkir,proto3" json:"id_parkir,omitempty"`
	WaktuMasuk    string `protobuf:"bytes,2,opt,name=waktu_masuk,json=waktuMasuk,proto3" json:"waktu_masuk,omitempty"`
	WaktuKeluar   string `protobuf:"bytes,3,opt,name=waktu_keluar,json=waktuKeluar,proto3" json:"waktu_keluar,omitempty"`
	Durasi        int32  `protobuf:"varint,4,opt,name=durasi,proto3" json:"durasi,omitempty"`
	TipeKendaraan string `protobuf:"bytes,5,opt,name=tipe_kendaraan,json=tipeKendaraan,proto3" json:"tipe_kendaraan,omitempty"`
	PlatNo        string `protobuf:"bytes,6,opt,name=plat_no,json=platNo,proto3" json:"plat_no,omitempty"`
	BiayaParkir   int32  `protobuf:"varint,7,opt,name=biaya_parkir,json=biayaParkir,proto3" json:"biaya_parkir,omitempty"`
}

func (x *Struk) Reset() {
	*x = Struk{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ProtoParkir_Parkir_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Struk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Struk) ProtoMessage() {}

func (x *Struk) ProtoReflect() protoreflect.Message {
	mi := &file_ProtoParkir_Parkir_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Struk.ProtoReflect.Descriptor instead.
func (*Struk) Descriptor() ([]byte, []int) {
	return file_ProtoParkir_Parkir_proto_rawDescGZIP(), []int{3}
}

func (x *Struk) GetIdParkir() string {
	if x != nil {
		return x.IdParkir
	}
	return ""
}

func (x *Struk) GetWaktuMasuk() string {
	if x != nil {
		return x.WaktuMasuk
	}
	return ""
}

func (x *Struk) GetWaktuKeluar() string {
	if x != nil {
		return x.WaktuKeluar
	}
	return ""
}

func (x *Struk) GetDurasi() int32 {
	if x != nil {
		return x.Durasi
	}
	return 0
}

func (x *Struk) GetTipeKendaraan() string {
	if x != nil {
		return x.TipeKendaraan
	}
	return ""
}

func (x *Struk) GetPlatNo() string {
	if x != nil {
		return x.PlatNo
	}
	return ""
}

func (x *Struk) GetBiayaParkir() int32 {
	if x != nil {
		return x.BiayaParkir
	}
	return 0
}

var File_ProtoParkir_Parkir_proto protoreflect.FileDescriptor

var file_ProtoParkir_Parkir_proto_rawDesc = []byte{
	0x0a, 0x18, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x61, 0x72, 0x6b, 0x69, 0x72, 0x2f, 0x50, 0x61,
	0x72, 0x6b, 0x69, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x70, 0x61, 0x72, 0x6b,
	0x69, 0x72, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x27, 0x0a, 0x0b, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x46, 0x0a, 0x06, 0x4b, 0x61, 0x72, 0x63,
	0x69, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x64, 0x5f, 0x70, 0x61, 0x72, 0x6b, 0x69, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x64, 0x50, 0x61, 0x72, 0x6b, 0x69, 0x72, 0x12,
	0x1f, 0x0a, 0x0b, 0x77, 0x61, 0x6b, 0x74, 0x75, 0x5f, 0x6d, 0x61, 0x73, 0x75, 0x6b, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x77, 0x61, 0x6b, 0x74, 0x75, 0x4d, 0x61, 0x73, 0x75, 0x6b,
	0x22, 0x65, 0x0a, 0x06, 0x50, 0x61, 0x72, 0x6b, 0x69, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x64,
	0x5f, 0x70, 0x61, 0x72, 0x6b, 0x69, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69,
	0x64, 0x50, 0x61, 0x72, 0x6b, 0x69, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x69, 0x70, 0x65, 0x5f,
	0x6b, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x61, 0x61, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x74, 0x69, 0x70, 0x65, 0x4b, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x61, 0x61, 0x6e, 0x12, 0x17,
	0x0a, 0x07, 0x70, 0x6c, 0x61, 0x74, 0x5f, 0x6e, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x70, 0x6c, 0x61, 0x74, 0x4e, 0x6f, 0x22, 0xe3, 0x01, 0x0a, 0x05, 0x53, 0x74, 0x72, 0x75,
	0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x64, 0x5f, 0x70, 0x61, 0x72, 0x6b, 0x69, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x64, 0x50, 0x61, 0x72, 0x6b, 0x69, 0x72, 0x12, 0x1f,
	0x0a, 0x0b, 0x77, 0x61, 0x6b, 0x74, 0x75, 0x5f, 0x6d, 0x61, 0x73, 0x75, 0x6b, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x77, 0x61, 0x6b, 0x74, 0x75, 0x4d, 0x61, 0x73, 0x75, 0x6b, 0x12,
	0x21, 0x0a, 0x0c, 0x77, 0x61, 0x6b, 0x74, 0x75, 0x5f, 0x6b, 0x65, 0x6c, 0x75, 0x61, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x77, 0x61, 0x6b, 0x74, 0x75, 0x4b, 0x65, 0x6c, 0x75,
	0x61, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x75, 0x72, 0x61, 0x73, 0x69, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x64, 0x75, 0x72, 0x61, 0x73, 0x69, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x69,
	0x70, 0x65, 0x5f, 0x6b, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x61, 0x61, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x74, 0x69, 0x70, 0x65, 0x4b, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x61, 0x61,
	0x6e, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x74, 0x5f, 0x6e, 0x6f, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x74, 0x4e, 0x6f, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x69,
	0x61, 0x79, 0x61, 0x5f, 0x70, 0x61, 0x72, 0x6b, 0x69, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x62, 0x69, 0x61, 0x79, 0x61, 0x50, 0x61, 0x72, 0x6b, 0x69, 0x72, 0x32, 0xb8, 0x01,
	0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x12, 0x40, 0x0a, 0x0f, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x54, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x1a, 0x13, 0x2e, 0x70, 0x61, 0x72, 0x6b, 0x69, 0x72, 0x2e, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x37, 0x0a, 0x0b, 0x4b,
	0x61, 0x72, 0x63, 0x69, 0x73, 0x4d, 0x61, 0x73, 0x75, 0x6b, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x0e, 0x2e, 0x70, 0x61, 0x72, 0x6b, 0x69, 0x72, 0x2e, 0x4b, 0x61, 0x72, 0x63,
	0x69, 0x73, 0x22, 0x00, 0x12, 0x32, 0x0a, 0x0f, 0x53, 0x74, 0x72, 0x75, 0x6b, 0x50, 0x65, 0x6d,
	0x62, 0x61, 0x79, 0x61, 0x72, 0x61, 0x6e, 0x12, 0x0e, 0x2e, 0x70, 0x61, 0x72, 0x6b, 0x69, 0x72,
	0x2e, 0x50, 0x61, 0x72, 0x6b, 0x69, 0x72, 0x1a, 0x0d, 0x2e, 0x70, 0x61, 0x72, 0x6b, 0x69, 0x72,
	0x2e, 0x53, 0x74, 0x72, 0x75, 0x6b, 0x22, 0x00, 0x42, 0x0e, 0x5a, 0x0c, 0x2f, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x50, 0x61, 0x72, 0x6b, 0x69, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ProtoParkir_Parkir_proto_rawDescOnce sync.Once
	file_ProtoParkir_Parkir_proto_rawDescData = file_ProtoParkir_Parkir_proto_rawDesc
)

func file_ProtoParkir_Parkir_proto_rawDescGZIP() []byte {
	file_ProtoParkir_Parkir_proto_rawDescOnce.Do(func() {
		file_ProtoParkir_Parkir_proto_rawDescData = protoimpl.X.CompressGZIP(file_ProtoParkir_Parkir_proto_rawDescData)
	})
	return file_ProtoParkir_Parkir_proto_rawDescData
}

var file_ProtoParkir_Parkir_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_ProtoParkir_Parkir_proto_goTypes = []interface{}{
	(*ServerReply)(nil), // 0: parkir.ServerReply
	(*Karcis)(nil),      // 1: parkir.Karcis
	(*Parkir)(nil),      // 2: parkir.Parkir
	(*Struk)(nil),       // 3: parkir.Struk
	(*empty.Empty)(nil), // 4: google.protobuf.Empty
}
var file_ProtoParkir_Parkir_proto_depIdxs = []int32{
	4, // 0: parkir.Connect.ConnectToServer:input_type -> google.protobuf.Empty
	4, // 1: parkir.Connect.KarcisMasuk:input_type -> google.protobuf.Empty
	2, // 2: parkir.Connect.StrukPembayaran:input_type -> parkir.Parkir
	0, // 3: parkir.Connect.ConnectToServer:output_type -> parkir.ServerReply
	1, // 4: parkir.Connect.KarcisMasuk:output_type -> parkir.Karcis
	3, // 5: parkir.Connect.StrukPembayaran:output_type -> parkir.Struk
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_ProtoParkir_Parkir_proto_init() }
func file_ProtoParkir_Parkir_proto_init() {
	if File_ProtoParkir_Parkir_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ProtoParkir_Parkir_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ProtoParkir_Parkir_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Karcis); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ProtoParkir_Parkir_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Parkir); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ProtoParkir_Parkir_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Struk); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ProtoParkir_Parkir_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ProtoParkir_Parkir_proto_goTypes,
		DependencyIndexes: file_ProtoParkir_Parkir_proto_depIdxs,
		MessageInfos:      file_ProtoParkir_Parkir_proto_msgTypes,
	}.Build()
	File_ProtoParkir_Parkir_proto = out.File
	file_ProtoParkir_Parkir_proto_rawDesc = nil
	file_ProtoParkir_Parkir_proto_goTypes = nil
	file_ProtoParkir_Parkir_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ConnectClient is the client API for Connect service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ConnectClient interface {
	ConnectToServer(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ServerReply, error)
	KarcisMasuk(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Karcis, error)
	StrukPembayaran(ctx context.Context, in *Parkir, opts ...grpc.CallOption) (*Struk, error)
}

type connectClient struct {
	cc grpc.ClientConnInterface
}

func NewConnectClient(cc grpc.ClientConnInterface) ConnectClient {
	return &connectClient{cc}
}

func (c *connectClient) ConnectToServer(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ServerReply, error) {
	out := new(ServerReply)
	err := c.cc.Invoke(ctx, "/parkir.Connect/ConnectToServer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *connectClient) KarcisMasuk(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Karcis, error) {
	out := new(Karcis)
	err := c.cc.Invoke(ctx, "/parkir.Connect/KarcisMasuk", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *connectClient) StrukPembayaran(ctx context.Context, in *Parkir, opts ...grpc.CallOption) (*Struk, error) {
	out := new(Struk)
	err := c.cc.Invoke(ctx, "/parkir.Connect/StrukPembayaran", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ConnectServer is the server API for Connect service.
type ConnectServer interface {
	ConnectToServer(context.Context, *empty.Empty) (*ServerReply, error)
	KarcisMasuk(context.Context, *empty.Empty) (*Karcis, error)
	StrukPembayaran(context.Context, *Parkir) (*Struk, error)
}

// UnimplementedConnectServer can be embedded to have forward compatible implementations.
type UnimplementedConnectServer struct {
}

func (*UnimplementedConnectServer) ConnectToServer(context.Context, *empty.Empty) (*ServerReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ConnectToServer not implemented")
}
func (*UnimplementedConnectServer) KarcisMasuk(context.Context, *empty.Empty) (*Karcis, error) {
	return nil, status.Errorf(codes.Unimplemented, "method KarcisMasuk not implemented")
}
func (*UnimplementedConnectServer) StrukPembayaran(context.Context, *Parkir) (*Struk, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StrukPembayaran not implemented")
}

func RegisterConnectServer(s *grpc.Server, srv ConnectServer) {
	s.RegisterService(&_Connect_serviceDesc, srv)
}

func _Connect_ConnectToServer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConnectServer).ConnectToServer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/parkir.Connect/ConnectToServer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConnectServer).ConnectToServer(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Connect_KarcisMasuk_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConnectServer).KarcisMasuk(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/parkir.Connect/KarcisMasuk",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConnectServer).KarcisMasuk(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Connect_StrukPembayaran_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Parkir)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConnectServer).StrukPembayaran(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/parkir.Connect/StrukPembayaran",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConnectServer).StrukPembayaran(ctx, req.(*Parkir))
	}
	return interceptor(ctx, in, info, handler)
}

var _Connect_serviceDesc = grpc.ServiceDesc{
	ServiceName: "parkir.Connect",
	HandlerType: (*ConnectServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ConnectToServer",
			Handler:    _Connect_ConnectToServer_Handler,
		},
		{
			MethodName: "KarcisMasuk",
			Handler:    _Connect_KarcisMasuk_Handler,
		},
		{
			MethodName: "StrukPembayaran",
			Handler:    _Connect_StrukPembayaran_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ProtoParkir/Parkir.proto",
}
